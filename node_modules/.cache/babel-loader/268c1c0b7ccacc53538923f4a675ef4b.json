{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer, useEffect } from \"react\";\nimport { useSwipeable } from \"react-swipeable\";\n\nfunction previous(length, current) {\n  return (current - 1 + length) % length;\n}\n\nfunction next(length, current) {\n  return (current + 1) % length;\n}\n\nfunction threshold(target) {\n  const width = target.clientWidth;\n  return width / 3;\n}\n\nconst transitionTime = 400;\nconst elastic = `transform ${transitionTime}ms cubic-bezier(0.68, -0.55, 0.265, 1.55)`;\nconst smooth = `transform ${transitionTime}ms ease`;\nconst initialCarouselState = {\n  offset: 0,\n  desired: 0,\n  active: 0\n};\n\nfunction carouselReducer(state, action) {\n  switch (action.type) {\n    case \"jump\":\n      return { ...state,\n        desired: action.desired\n      };\n\n    case \"next\":\n      return { ...state,\n        desired: next(action.length, state.active)\n      };\n\n    case \"prev\":\n      return { ...state,\n        desired: previous(action.length, state.active)\n      };\n\n    case \"done\":\n      return { ...state,\n        offset: NaN,\n        active: state.desired\n      };\n\n    case \"drag\":\n      return { ...state,\n        offset: action.offset\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction swiped(e, dispatch, length, dir) {\n  const t = threshold(e.event.target);\n  const d = dir * e.deltaX;\n\n  if (d >= t) {\n    dispatch({\n      type: dir > 0 ? \"next\" : \"prev\",\n      length\n    });\n  } else {\n    dispatch({\n      type: \"drag\",\n      offset: 0\n    });\n  }\n}\n\nexport function useCarousel(length, interval) {\n  _s();\n\n  const [state, dispatch] = useReducer(carouselReducer, initialCarouselState);\n  const handlers = useSwipeable({\n    onSwiping(e) {\n      dispatch({\n        type: \"drag\",\n        offset: -e.deltaX\n      });\n    },\n\n    onSwipedLeft(e) {\n      swiped(e, dispatch, length, 1);\n    },\n\n    onSwipedRight(e) {\n      swiped(e, dispatch, length, -1);\n    },\n\n    trackMouse: true,\n    trackTouch: true\n  });\n  useEffect(() => {\n    const id = setTimeout(() => dispatch({\n      type: \"next\",\n      length\n    }), interval);\n    return () => clearTimeout(id);\n  }, [state.offset, state.active, length, interval]);\n  useEffect(() => {\n    const id = setTimeout(() => dispatch({\n      type: \"done\"\n    }), transitionTime);\n    return () => clearTimeout(id);\n  }, [state.desired]);\n  const style = {\n    transform: \"translateX(0)\",\n    width: `${100 * (length + 2)}%`,\n    left: `-${(state.active + 1) * 100}%`\n  };\n\n  if (state.desired !== state.active) {\n    const dist = Math.abs(state.active - state.desired);\n    const pref = Math.sign(state.offset || 0);\n    const dir = (dist > length / 2 ? 1 : -1) * Math.sign(state.desired - state.active);\n    const shift = 100 * (pref || dir) / (length + 2);\n    style.transition = smooth;\n    style.transform = `translateX(${shift}%)`;\n  } else if (!isNaN(state.offset)) {\n    if (state.offset !== 0) {\n      style.transform = `translateX(${state.offset}px)`;\n    } else {\n      style.transition = elastic;\n    }\n  }\n\n  return [state.active, n => dispatch({\n    type: \"jump\",\n    desired: n\n  }), handlers, style];\n}\n\n_s(useCarousel, \"G3y6oFOyJ6m7i23jhuI1dDWzhrA=\", false, function () {\n  return [useSwipeable];\n});","map":{"version":3,"sources":["/Users/diego/Documents/myservice/src/hooks/useCarrousel.js"],"names":["useReducer","useEffect","useSwipeable","previous","length","current","next","threshold","target","width","clientWidth","transitionTime","elastic","smooth","initialCarouselState","offset","desired","active","carouselReducer","state","action","type","NaN","swiped","e","dispatch","dir","t","event","d","deltaX","useCarousel","interval","handlers","onSwiping","onSwipedLeft","onSwipedRight","trackMouse","trackTouch","id","setTimeout","clearTimeout","style","transform","left","dist","Math","abs","pref","sign","shift","transition","isNaN","n"],"mappings":"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","sourcesContent":["import { useReducer, useEffect } from \"react\";\nimport { useSwipeable } from \"react-swipeable\";\n\nfunction previous(length, current) {\n  return (current - 1 + length) % length;\n}\n\nfunction next(length, current) {\n  return (current + 1) % length;\n}\n\nfunction threshold(target) {\n  const width = target.clientWidth;\n  return width / 3;\n}\n\nconst transitionTime = 400;\nconst elastic = `transform ${transitionTime}ms cubic-bezier(0.68, -0.55, 0.265, 1.55)`;\nconst smooth = `transform ${transitionTime}ms ease`;\n\nconst initialCarouselState = {\n  offset: 0,\n  desired: 0,\n  active: 0,\n};\n\nfunction carouselReducer(state, action) {\n  switch (action.type) {\n    case \"jump\":\n      return {\n        ...state,\n        desired: action.desired,\n      };\n    case \"next\":\n      return {\n        ...state,\n        desired: next(action.length, state.active),\n      };\n    case \"prev\":\n      return {\n        ...state,\n        desired: previous(action.length, state.active),\n      };\n    case \"done\":\n      return {\n        ...state,\n        offset: NaN,\n        active: state.desired,\n      };\n    case \"drag\":\n      return {\n        ...state,\n        offset: action.offset,\n      };\n    default:\n      return state;\n  }\n}\n\nfunction swiped(e, dispatch, length, dir) {\n  const t = threshold(e.event.target);\n  const d = dir * e.deltaX;\n\n  if (d >= t) {\n    dispatch({\n      type: dir > 0 ? \"next\" : \"prev\",\n      length,\n    });\n  } else {\n    dispatch({\n      type: \"drag\",\n      offset: 0,\n    });\n  }\n}\n\nexport function useCarousel(length, interval) {\n  const [state, dispatch] = useReducer(carouselReducer, initialCarouselState);\n  const handlers = useSwipeable({\n    onSwiping(e) {\n      dispatch({\n        type: \"drag\",\n        offset: -e.deltaX,\n      });\n    },\n    onSwipedLeft(e) {\n      swiped(e, dispatch, length, 1);\n    },\n    onSwipedRight(e) {\n      swiped(e, dispatch, length, -1);\n    },\n    trackMouse: true,\n    trackTouch: true,\n  });\n\n  useEffect(() => {\n    const id = setTimeout(() => dispatch({ type: \"next\", length }), interval);\n    return () => clearTimeout(id);\n  }, [state.offset, state.active, length, interval]);\n\n  useEffect(() => {\n    const id = setTimeout(() => dispatch({ type: \"done\" }), transitionTime);\n    return () => clearTimeout(id);\n  }, [state.desired]);\n\n  const style = {\n    transform: \"translateX(0)\",\n    width: `${100 * (length + 2)}%`,\n    left: `-${(state.active + 1) * 100}%`,\n  };\n\n  if (state.desired !== state.active) {\n    const dist = Math.abs(state.active - state.desired);\n    const pref = Math.sign(state.offset || 0);\n    const dir =\n      (dist > length / 2 ? 1 : -1) * Math.sign(state.desired - state.active);\n    const shift = (100 * (pref || dir)) / (length + 2);\n    style.transition = smooth;\n    style.transform = `translateX(${shift}%)`;\n  } else if (!isNaN(state.offset)) {\n    if (state.offset !== 0) {\n      style.transform = `translateX(${state.offset}px)`;\n    } else {\n      style.transition = elastic;\n    }\n  }\n\n  return [\n    state.active,\n    (n) => dispatch({ type: \"jump\", desired: n }),\n    handlers,\n    style,\n  ];\n}\n"]},"metadata":{},"sourceType":"module"}