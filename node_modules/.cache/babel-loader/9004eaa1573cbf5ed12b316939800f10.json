{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport const useSimpleForm = formShape => {\n  _s();\n\n  const [state, setState] = useState(formShape);\n\n  const onChange = ({\n    target: {\n      name,\n      value,\n      type,\n      checked,\n      files,\n      multiple\n    }\n  }) => {\n    let nextValue = type === \"checkbox\" ? checked : value;\n\n    if (type === \"file\") {\n      nextValue = multiple ? files : files[0];\n    }\n\n    setState(prevState => ({ ...prevState,\n      [name]: nextValue\n    }));\n  };\n\n  const hardSetValues = incomingValues => {\n    setState(prevState => ({ ...prevState,\n      ...incomingValues\n    }));\n  };\n\n  return {\n    values: state,\n    onChange,\n    hardSetValues\n  };\n};\n\n_s(useSimpleForm, \"Z7+rbEGFt4A1W4kRjCQBzr7XK7g=\");","map":{"version":3,"sources":["/Users/diego/Documents/myservice/src/hooks/useSimpleForm.js"],"names":["useState","useSimpleForm","formShape","state","setState","onChange","target","name","value","type","checked","files","multiple","nextValue","prevState","hardSetValues","incomingValues","values"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,MAAMC,aAAa,GAAIC,SAAD,IAAe;AAAA;;AAC1C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACE,SAAD,CAAlC;;AACA,QAAMG,QAAQ,GAAG,CAAC;AAChBC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,IAAf;AAAqBC,MAAAA,OAArB;AAA8BC,MAAAA,KAA9B;AAAqCC,MAAAA;AAArC;AADQ,GAAD,KAEX;AACJ,QAAIC,SAAS,GAAGJ,IAAI,KAAK,UAAT,GAAsBC,OAAtB,GAAgCF,KAAhD;;AACA,QAAIC,IAAI,KAAK,MAAb,EAAqB;AACnBI,MAAAA,SAAS,GAAGD,QAAQ,GAAGD,KAAH,GAAWA,KAAK,CAAC,CAAD,CAApC;AACD;;AAEDP,IAAAA,QAAQ,CAAEU,SAAD,KAAgB,EAAE,GAAGA,SAAL;AAAgB,OAACP,IAAD,GAAQM;AAAxB,KAAhB,CAAD,CAAR;AACD,GATD;;AAWA,QAAME,aAAa,GAAIC,cAAD,IAAoB;AACxCZ,IAAAA,QAAQ,CAAEU,SAAD,KAAgB,EAAE,GAAGA,SAAL;AAAgB,SAAGE;AAAnB,KAAhB,CAAD,CAAR;AACD,GAFD;;AAIA,SAAO;AAAEC,IAAAA,MAAM,EAAEd,KAAV;AAAiBE,IAAAA,QAAjB;AAA2BU,IAAAA;AAA3B,GAAP;AACD,CAlBM;;GAAMd,a","sourcesContent":["import { useState } from \"react\";\n\nexport const useSimpleForm = (formShape) => {\n  const [state, setState] = useState(formShape);\n  const onChange = ({\n    target: { name, value, type, checked, files, multiple },\n  }) => {\n    let nextValue = type === \"checkbox\" ? checked : value;\n    if (type === \"file\") {\n      nextValue = multiple ? files : files[0];\n    }\n\n    setState((prevState) => ({ ...prevState, [name]: nextValue }));\n  };\n\n  const hardSetValues = (incomingValues) => {\n    setState((prevState) => ({ ...prevState, ...incomingValues }));\n  };\n\n  return { values: state, onChange, hardSetValues };\n};\n"]},"metadata":{},"sourceType":"module"}