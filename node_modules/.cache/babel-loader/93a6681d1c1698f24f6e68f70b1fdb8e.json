{"ast":null,"code":"var _jsxFileName = \"/Users/diego/Documents/myservice/src/components/screens/Categories/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { TabDescriptor } from '../../organisms';\nimport { useApiRequest, usePagination } from '../../../hooks';\nimport Grid from \"@material-ui/core/Grid\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { CardList } from '../../molecules';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Categories = () => {\n  _s();\n\n  const [categories, setCategories] = useState([]);\n  const [services, setServices] = useState([]); // Selected category\n\n  const [category, setCategory] = useState(undefined);\n  const {\n    getRequest\n  } = useApiRequest();\n  const {\n    data,\n    count,\n    handleChange\n  } = usePagination([...services], 6);\n  console.log('data', data);\n  useEffect(() => {\n    const getData = async () => {\n      const {\n        services\n      } = await getRequest(`service-type/`);\n      setCategories([...services]);\n      console.log(services);\n    };\n\n    const getServicesByCategories = async () => {\n      const {\n        services\n      } = await getRequest(`service-type/${category}/services`);\n      if (services) setServices(services);\n      handleChange(1);\n    };\n\n    const getAllData = async () => {\n      await getData();\n      await getServicesByCategories();\n    };\n\n    getAllData();\n  }, [category]);\n\n  const handleApiOfCategories = index => {\n    console.log(index);\n    setCategory(index);\n  };\n\n  const changePage = (event, value) => handleChange(value);\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      children: /*#__PURE__*/_jsxDEV(TabDescriptor, {\n        tabs: categories,\n        click: handleApiOfCategories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      data: data,\n      xs: 4,\n      sm: 4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      align: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        count: count,\n        className: \"pagination\",\n        variant: \"outlined\",\n        shape: \"rounded\",\n        onChange: changePage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Categories, \"XjBWR7X1c6ulSaJ/pFGkJ2F9KnY=\", false, function () {\n  return [useApiRequest, usePagination];\n});\n\n_c = Categories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"sources":["/Users/diego/Documents/myservice/src/components/screens/Categories/index.js"],"names":["React","useEffect","useState","TabDescriptor","useApiRequest","usePagination","Grid","Pagination","CardList","Categories","categories","setCategories","services","setServices","category","setCategory","undefined","getRequest","data","count","handleChange","console","log","getData","getServicesByCategories","getAllData","handleApiOfCategories","index","changePage","event","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {TabDescriptor} from '../../organisms';\nimport {useApiRequest, usePagination} from '../../../hooks';\nimport Grid from \"@material-ui/core/Grid\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport {CardList} from '../../molecules';\n\n\n\nexport const Categories = () => {\n  const [categories, setCategories] = useState([]);\n  const [services, setServices] = useState([]);\n  // Selected category\n  const [category, setCategory] = useState(undefined);\n  const {getRequest} = useApiRequest();\n  const { data, count, handleChange } = usePagination([...services], 6);\n  console.log('data', data);\n\n\n  useEffect(() => {\n    const getData = async () => {\n      const { services } = await getRequest(`service-type/`);\n      setCategories([...services]);\n      console.log(services);\n    };\n    const getServicesByCategories = async () => {\n      const {services} = await getRequest(`service-type/${category}/services`);\n      if (services) setServices(services);\n      handleChange(1);\n    };\n    const getAllData = async () => {\n      await getData();\n      await getServicesByCategories();\n    };\n    getAllData();\n  }, [category]);\n\n  const handleApiOfCategories = (index) => {\n    console.log(index);\n    setCategory(index);\n  };\n\n  const changePage = (event, value) => handleChange(value);\n\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sm={12}> \n        <TabDescriptor tabs={categories} click={handleApiOfCategories}/>\n      </Grid>\n      <CardList data={data}  xs={4} sm={4} />\n      <Grid item xs={12} align=\"center\">\n        <Pagination\n          count={count}\n          className=\"pagination\"\n          variant=\"outlined\"\n          shape=\"rounded\"\n          onChange={changePage}\n        />\n      </Grid>\n\n    </Grid>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}