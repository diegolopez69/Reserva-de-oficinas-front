{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { myAxios } from \"../Utils/\";\nimport { API_BASE_URL } from \"../globals\";\nimport { UserContext } from \"../context\";\nexport const useApiRequest = () => {\n  _s();\n\n  const {\n    token\n  } = useContext(UserContext);\n\n  const apiRequest = (type, endpoint, data = {}, url) => {\n    return new Promise((resolve, reject) => myAxios({\n      method: type,\n      url: url ? endpoint : `${API_BASE_URL}${endpoint}`,\n      ...(token ? {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      } : {}),\n      data\n    }).then(res => resolve(res.data._embedded)).catch(error => reject(error)));\n  };\n\n  const postRequest = (endpoint, data) => apiRequest(\"post\", endpoint, data);\n\n  const putRequest = (endpoint, data) => apiRequest(\"put\", endpoint, data);\n\n  const patchRequest = (endpoint, data) => apiRequest(\"patch\", endpoint, data);\n\n  const deleteRequest = endpoint => apiRequest(\"delete\", endpoint);\n\n  const getRequest = (endpoint, url) => apiRequest('get', endpoint, {}, url);\n\n  return {\n    postRequest,\n    putRequest,\n    deleteRequest,\n    patchRequest,\n    getRequest\n  };\n};\n\n_s(useApiRequest, \"cEWfwo+M5xs1Y4dCb3Fz43unteI=\");\n\nexport default useApiRequest;","map":{"version":3,"sources":["/Users/diego/Documents/myservice/src/hooks/useApiRequest.js"],"names":["useContext","myAxios","API_BASE_URL","UserContext","useApiRequest","token","apiRequest","type","endpoint","data","url","Promise","resolve","reject","method","headers","Authorization","then","res","_embedded","catch","error","postRequest","putRequest","patchRequest","deleteRequest","getRequest"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,WAAT,QAA4B,YAA5B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAYL,UAAU,CAACG,WAAD,CAA5B;;AAEA,QAAMG,UAAU,GAAG,CAACC,IAAD,EAAOC,QAAP,EAAiBC,IAAI,GAAG,EAAxB,EAA4BC,GAA5B,KAAoC;AACrD,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KACjBZ,OAAO,CAAC;AACNa,MAAAA,MAAM,EAAEP,IADF;AAENG,MAAAA,GAAG,EAAEA,GAAG,GAAGF,QAAH,GAAe,GAAEN,YAAa,GAAEM,QAAS,EAF3C;AAGN,UAAIH,KAAK,GACL;AACEU,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASX,KAAM;AADxB;AADX,OADK,GAML,EANJ,CAHM;AAUNI,MAAAA;AAVM,KAAD,CAAP,CAYGQ,IAZH,CAYSC,GAAD,IAASN,OAAO,CAACM,GAAG,CAACT,IAAJ,CAASU,SAAV,CAZxB,EAaGC,KAbH,CAaUC,KAAD,IAAWR,MAAM,CAACQ,KAAD,CAb1B,CADK,CAAP;AAgBD,GAjBD;;AAmBA,QAAMC,WAAW,GAAG,CAACd,QAAD,EAAWC,IAAX,KAAoBH,UAAU,CAAC,MAAD,EAASE,QAAT,EAAmBC,IAAnB,CAAlD;;AACA,QAAMc,UAAU,GAAG,CAACf,QAAD,EAAWC,IAAX,KAAoBH,UAAU,CAAC,KAAD,EAAQE,QAAR,EAAkBC,IAAlB,CAAjD;;AACA,QAAMe,YAAY,GAAG,CAAChB,QAAD,EAAWC,IAAX,KAAoBH,UAAU,CAAC,OAAD,EAAUE,QAAV,EAAoBC,IAApB,CAAnD;;AACA,QAAMgB,aAAa,GAAIjB,QAAD,IAAcF,UAAU,CAAC,QAAD,EAAWE,QAAX,CAA9C;;AACA,QAAMkB,UAAU,GAAG,CAAClB,QAAD,EAAWE,GAAX,KAAmBJ,UAAU,CAAC,KAAD,EAAQE,QAAR,EAAkB,EAAlB,EAAsBE,GAAtB,CAAhD;;AAEA,SAAO;AAAEY,IAAAA,WAAF;AAAeC,IAAAA,UAAf;AAA2BE,IAAAA,aAA3B;AAA0CD,IAAAA,YAA1C;AAAwDE,IAAAA;AAAxD,GAAP;AACD,CA7BM;;GAAMtB,a;;AA+Bb,eAAeA,aAAf","sourcesContent":["import { useContext } from \"react\";\nimport { myAxios } from \"../Utils/\";\n\nimport { API_BASE_URL } from \"../globals\";\nimport { UserContext } from \"../context\";\n\nexport const useApiRequest = () => {\n  const { token } = useContext(UserContext);\n\n  const apiRequest = (type, endpoint, data = {}, url) => {\n    return new Promise((resolve, reject) =>\n      myAxios({\n        method: type,\n        url: url ? endpoint : `${API_BASE_URL}${endpoint}`,\n        ...(token\n          ? {\n              headers: {\n                Authorization: `Bearer ${token}`,\n              },\n            }\n          : {}),\n        data,\n      })\n        .then((res) => resolve(res.data._embedded))\n        .catch((error) => reject(error))\n    );\n  };\n\n  const postRequest = (endpoint, data) => apiRequest(\"post\", endpoint, data);\n  const putRequest = (endpoint, data) => apiRequest(\"put\", endpoint, data);\n  const patchRequest = (endpoint, data) => apiRequest(\"patch\", endpoint, data);\n  const deleteRequest = (endpoint) => apiRequest(\"delete\", endpoint);\n  const getRequest = (endpoint, url) => apiRequest('get', endpoint, {}, url);\n\n  return { postRequest, putRequest, deleteRequest, patchRequest, getRequest };\n};\n\nexport default useApiRequest;\n"]},"metadata":{},"sourceType":"module"}