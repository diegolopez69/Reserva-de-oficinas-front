{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext, useState, useEffect } from \"react\";\nimport { UserContext } from \"../context\";\nimport { myAxios } from \"../Utils\";\nexport const FETCHSTATES = {\n  loading: \"loading\",\n  error: \"error\",\n  success: \"success\"\n};\nexport const useFetch = url => {\n  _s();\n\n  const source = myAxios.CancelToken.source();\n  const {\n    token\n  } = useContext(UserContext);\n  const [status, setStatus] = useState(FETCHSTATES.loading);\n  const [data, setData] = useState({});\n  const [error, setError] = useState({});\n  useEffect(() => {\n    setData({});\n  }, [url]);\n  useEffect(() => {\n    setStatus(FETCHSTATES.loading);\n    myAxios({\n      method: \"GET\",\n      url,\n      cancelToken: source.token,\n      ...(token ? {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      } : {})\n    }).then(({\n      data\n    }) => {\n      setData(data._embedded);\n      setError(null);\n      setStatus(FETCHSTATES.success);\n    }).catch(error => {\n      if (!myAxios.isCancel(error)) {\n        setData(null);\n        setError(error);\n        setStatus(FETCHSTATES.error);\n      }\n\n      console.error(error);\n    });\n    return () => source.cancel(\"Petición cancelada\");\n  }, [url]);\n  return [data, status, error];\n};\n\n_s(useFetch, \"rFU2pA919hwuARmoMieQaFHl7h0=\");","map":{"version":3,"sources":["/Users/diego/Documents/myservice/src/hooks/useFetch.js"],"names":["useContext","useState","useEffect","UserContext","myAxios","FETCHSTATES","loading","error","success","useFetch","url","source","CancelToken","token","status","setStatus","data","setData","setError","method","cancelToken","headers","Authorization","then","_embedded","catch","isCancel","console","cancel"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,SAA/B,QAAgD,OAAhD;AAEA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,OAAT,QAAwB,UAAxB;AAEA,OAAO,MAAMC,WAAW,GAAG;AACzBC,EAAAA,OAAO,EAAE,SADgB;AAEzBC,EAAAA,KAAK,EAAE,OAFkB;AAGzBC,EAAAA,OAAO,EAAE;AAHgB,CAApB;AAMP,OAAO,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AAC/B,QAAMC,MAAM,GAAGP,OAAO,CAACQ,WAAR,CAAoBD,MAApB,EAAf;AAEA,QAAM;AAAEE,IAAAA;AAAF,MAAYb,UAAU,CAACG,WAAD,CAA5B;AAEA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAACI,WAAW,CAACC,OAAb,CAApC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,KAAD,EAAQW,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAFQ,EAEN,CAACP,GAAD,CAFM,CAAT;AAIAR,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,SAAS,CAACV,WAAW,CAACC,OAAb,CAAT;AACAF,IAAAA,OAAO,CAAC;AACNe,MAAAA,MAAM,EAAE,KADF;AAENT,MAAAA,GAFM;AAGNU,MAAAA,WAAW,EAAET,MAAM,CAACE,KAHd;AAIN,UAAIA,KAAK,GACL;AACEQ,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAAST,KAAM;AADxB;AADX,OADK,GAML,EANJ;AAJM,KAAD,CAAP,CAYGU,IAZH,CAYQ,CAAC;AAAEP,MAAAA;AAAF,KAAD,KAAc;AAClBC,MAAAA,OAAO,CAACD,IAAI,CAACQ,SAAN,CAAP;AACAN,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAH,MAAAA,SAAS,CAACV,WAAW,CAACG,OAAb,CAAT;AACD,KAhBH,EAiBGiB,KAjBH,CAiBUlB,KAAD,IAAW;AAChB,UAAI,CAACH,OAAO,CAACsB,QAAR,CAAiBnB,KAAjB,CAAL,EAA8B;AAC5BU,QAAAA,OAAO,CAAC,IAAD,CAAP;AACAC,QAAAA,QAAQ,CAACX,KAAD,CAAR;AACAQ,QAAAA,SAAS,CAACV,WAAW,CAACE,KAAb,CAAT;AACD;;AACDoB,MAAAA,OAAO,CAACpB,KAAR,CAAcA,KAAd;AACD,KAxBH;AA0BA,WAAO,MAAMI,MAAM,CAACiB,MAAP,CAAc,oBAAd,CAAb;AACD,GA7BQ,EA6BN,CAAClB,GAAD,CA7BM,CAAT;AA+BA,SAAO,CAACM,IAAD,EAAOF,MAAP,EAAeP,KAAf,CAAP;AACD,CA7CM;;GAAME,Q","sourcesContent":["import { useContext, useState, useEffect } from \"react\";\n\nimport { UserContext } from \"../context\";\nimport { myAxios } from \"../Utils\";\n\nexport const FETCHSTATES = {\n  loading: \"loading\",\n  error: \"error\",\n  success: \"success\",\n};\n\nexport const useFetch = (url) => {\n  const source = myAxios.CancelToken.source();\n\n  const { token } = useContext(UserContext);\n\n  const [status, setStatus] = useState(FETCHSTATES.loading);\n  const [data, setData] = useState({});\n  const [error, setError] = useState({});\n\n  useEffect(() => {\n    setData({});\n  }, [url]);\n\n  useEffect(() => {\n    setStatus(FETCHSTATES.loading);\n    myAxios({\n      method: \"GET\",\n      url,\n      cancelToken: source.token,\n      ...(token\n        ? {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        : {}),\n    })\n      .then(({ data }) => {\n        setData(data._embedded);\n        setError(null);\n        setStatus(FETCHSTATES.success);\n      })\n      .catch((error) => {\n        if (!myAxios.isCancel(error)) {\n          setData(null);\n          setError(error);\n          setStatus(FETCHSTATES.error);\n        }\n        console.error(error);\n      });\n\n    return () => source.cancel(\"Petición cancelada\");\n  }, [url]);\n\n  return [data, status, error];\n};\n"]},"metadata":{},"sourceType":"module"}