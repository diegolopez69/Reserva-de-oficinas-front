{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nexport const usePagination = (items = [], itemsPerPage = 5) => {\n  _s();\n\n  const getInitialValue = page => {\n    return parseInt(page * itemsPerPage - itemsPerPage, 10);\n  };\n\n  const getMaxValue = () => {\n    return parseInt(itemsPerPage, 10);\n  };\n\n  const getNewArray = (initial, max) => {\n    console.log('nuevo ', [...items.slice(initial, max)]);\n    return [...items.slice(initial, max)];\n  };\n\n  const countNumberOfPages = () => {\n    return parseInt(Math.ceil(items.length / itemsPerPage), 10);\n  };\n\n  const reducer = (state, {\n    page\n  }) => {\n    return {\n      data: getNewArray(getInitialValue(page), getMaxValue()),\n      count: countNumberOfPages()\n    };\n  };\n\n  const [state, dispatch] = useReducer(reducer, {\n    data: getNewArray(getInitialValue(1), getMaxValue()),\n    count: countNumberOfPages()\n  });\n\n  const handleChange = page => dispatch({\n    page\n  });\n\n  return { ...state,\n    handleChange\n  };\n};\n\n_s(usePagination, \"2QGaZUH9xz6m+GGRQbC2gZow8+U=\");","map":{"version":3,"sources":["/Users/diego/Documents/myservice/src/hooks/usePagination.js"],"names":["useReducer","usePagination","items","itemsPerPage","getInitialValue","page","parseInt","getMaxValue","getNewArray","initial","max","console","log","slice","countNumberOfPages","Math","ceil","length","reducer","state","data","count","dispatch","handleChange"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,YAAY,GAAG,CAA5B,KAAkC;AAAA;;AAC7D,QAAMC,eAAe,GAAIC,IAAD,IAAU;AAChC,WAAOC,QAAQ,CAACD,IAAI,GAAGF,YAAP,GAAuBA,YAAxB,EAAuC,EAAvC,CAAf;AACD,GAFD;;AAIA,QAAMI,WAAW,GAAG,MAAM;AACxB,WAAOD,QAAQ,CAACH,YAAD,EAAe,EAAf,CAAf;AACD,GAFD;;AAIA,QAAMK,WAAW,GAAG,CAACC,OAAD,EAAUC,GAAV,KAAkB;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,CAAC,GAAGV,KAAK,CAACW,KAAN,CAAYJ,OAAZ,EAAqBC,GAArB,CAAJ,CAAtB;AACA,WAAO,CAAC,GAAGR,KAAK,CAACW,KAAN,CAAYJ,OAAZ,EAAqBC,GAArB,CAAJ,CAAP;AACD,GAHD;;AAKA,QAAMI,kBAAkB,GAAG,MAAM;AAC/B,WAAOR,QAAQ,CAACS,IAAI,CAACC,IAAL,CAAUd,KAAK,CAACe,MAAN,GAAed,YAAzB,CAAD,EAAyC,EAAzC,CAAf;AACD,GAFD;;AAIA,QAAMe,OAAO,GAAG,CAACC,KAAD,EAAQ;AAACd,IAAAA;AAAD,GAAR,KAAmB;AACjC,WAAO;AACLe,MAAAA,IAAI,EAAEZ,WAAW,CACfJ,eAAe,CAACC,IAAD,CADA,EAEfE,WAAW,EAFI,CADZ;AAKLc,MAAAA,KAAK,EAAEP,kBAAkB;AALpB,KAAP;AAOD,GARD;;AAUA,QAAM,CAACK,KAAD,EAAQG,QAAR,IAAoBtB,UAAU,CAACkB,OAAD,EAAU;AAC5CE,IAAAA,IAAI,EAAEZ,WAAW,CACfJ,eAAe,CAAC,CAAD,CADA,EAEfG,WAAW,EAFI,CAD2B;AAK5Cc,IAAAA,KAAK,EAAEP,kBAAkB;AALmB,GAAV,CAApC;;AAQA,QAAMS,YAAY,GAAIlB,IAAD,IAAUiB,QAAQ,CAAC;AAACjB,IAAAA;AAAD,GAAD,CAAvC;;AACA,SAAO,EAAC,GAAGc,KAAJ;AAAWI,IAAAA;AAAX,GAAP;AACD,CAtCM;;GAAMtB,a","sourcesContent":["import { useReducer } from 'react';\n\nexport const usePagination = (items = [], itemsPerPage = 5) => {\n  const getInitialValue = (page) => {\n    return parseInt(page * itemsPerPage - (itemsPerPage), 10)\n  };\n  \n  const getMaxValue = () => {\n    return parseInt(itemsPerPage, 10);\n  };\n  \n  const getNewArray = (initial, max) => {\n    console.log('nuevo ', [...items.slice(initial, max)]);\n    return [...items.slice(initial, max)];\n  };\n\n  const countNumberOfPages = () => {\n    return parseInt(Math.ceil(items.length / itemsPerPage), 10);\n  };\n\n  const reducer = (state, {page}) => {\n    return {\n      data: getNewArray(\n        getInitialValue(page),\n        getMaxValue(),\n      ),\n      count: countNumberOfPages(),\n    };\n  };\n\n  const [state, dispatch] = useReducer(reducer, {\n    data: getNewArray(\n      getInitialValue(1),\n      getMaxValue(),\n    ), \n    count: countNumberOfPages(),\n  });\n\n  const handleChange = (page) => dispatch({page});\n  return {...state, handleChange};\n};\n"]},"metadata":{},"sourceType":"module"}