{"ast":null,"code":"var _jsxFileName = \"/Users/diego/Documents/myservice/src/components/organisms/auto-complete/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { useFetch, FETCHSTATES } from \"../../../hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AutoCompleteField = ({\n  source,\n  label,\n  labelResolver,\n  dataSourceResolver,\n  ...rest\n}) => {\n  _s();\n\n  const [data, status] = useFetch(source);\n  if (status === FETCHSTATES.loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loader\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 46\n  }, this);\n  const options = dataSourceResolver(data);\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    options: options,\n    getOptionLabel: labelResolver,\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n      placeholder: label,\n      variant: \"outlined\",\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AutoCompleteField, \"kZ9fyn7WeEDfDu5cmF6GvS9lbHY=\", false, function () {\n  return [useFetch];\n});\n\n_c = AutoCompleteField;\n\nvar _c;\n\n$RefreshReg$(_c, \"AutoCompleteField\");","map":{"version":3,"sources":["/Users/diego/Documents/myservice/src/components/organisms/auto-complete/index.js"],"names":["React","TextField","Autocomplete","useFetch","FETCHSTATES","AutoCompleteField","source","label","labelResolver","dataSourceResolver","rest","data","status","loading","options","params"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAAC;AAChCC,EAAAA,MADgC;AAEhCC,EAAAA,KAFgC;AAGhCC,EAAAA,aAHgC;AAIhCC,EAAAA,kBAJgC;AAKhC,KAAGC;AAL6B,CAAD,KAM3B;AAAA;;AACJ,QAAM,CAACC,IAAD,EAAOC,MAAP,IAAiBT,QAAQ,CAACG,MAAD,CAA/B;AAEA,MAAIM,MAAM,KAAKR,WAAW,CAACS,OAA3B,EAAoC,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEpC,QAAMC,OAAO,GAAGL,kBAAkB,CAACE,IAAD,CAAlC;AACA,sBACE,QAAC,YAAD;AACE,IAAA,OAAO,EAAEG,OADX;AAEE,IAAA,cAAc,EAAEN,aAFlB;AAGE,IAAA,WAAW,EAAGO,MAAD,iBACX,QAAC,SAAD,OACMA,MADN;AAEE,MAAA,WAAW,EAAER,KAFf;AAGE,MAAA,OAAO,EAAC,UAHV;AAAA,SAIMG;AAJN;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA1BM;;GAAML,iB;UAOYF,Q;;;KAPZE,iB","sourcesContent":["import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport { useFetch, FETCHSTATES } from \"../../../hooks\";\n\nexport const AutoCompleteField = ({\n  source,\n  label,\n  labelResolver,\n  dataSourceResolver,\n  ...rest\n}) => {\n  const [data, status] = useFetch(source);\n\n  if (status === FETCHSTATES.loading) return <div>loader</div>;\n\n  const options = dataSourceResolver(data);\n  return (\n    <Autocomplete\n      options={options}\n      getOptionLabel={labelResolver}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          placeholder={label}\n          variant=\"outlined\"\n          {...rest}\n        />\n      )}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}